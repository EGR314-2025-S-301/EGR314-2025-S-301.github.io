{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"appendix/","title":"Appendix","text":"<p>title: Appendix tags: - tag1 - tag2</p>"},{"location":"charts/","title":"Product Mission Statement","text":""},{"location":"charts/#our-mission","title":"Our Mission","text":""},{"location":"charts/#sharing-stem-education-to-inspire-curiosity-in-people-of-all-ages","title":"Sharing STEM education to inspire curiosity in people of all ages.","text":""},{"location":"ideation-and-concept-generation/","title":"Our Exhibit","text":"<p>The goal of our exhibit is to let people learn concepts through a demonstration of some type of STEM topic. We have determined that these topics must be related to something that these people have already been exposed to or will be. For example an exhibit of induction to children would be out of place but an exhibit of the color spectrum would be appropriate. The exhibit should also be interactive so that learning the concept or topic would be made easier. We don't want to make something that will just be stared at by an audience. We feel that having a user change variables will insure a higher change of a person learning the topic or concept displayed. </p> <p>Our audience will be 4th to 8th graders, as students in this age range are old enough to be trusted around more devices than children under this age range. Categorizing these students by grade also allows the team to understand what topics are appropriate for the age. The state of Arizona has standards for these grade levels, which can help inform what topics will be too advanced or too juvenile for our audience. </p>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#concept-presentation","title":"Concept Presentation","text":"<p>Watch the presentation of our concept here</p>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#preliminary-research","title":"Preliminary research","text":"<p>In the article, \u201cIdeation in Practice: How Effective UX Teams Generate Ideas\u201d, one of the things that can be challenging during the ideation process is a lack of user research. This is usually due to a lack of time for the ideation process. While our team did experience a time crunch during the ideation process, research was still done to give ourselves a basis for generating ideas.</p> <p>Our team did preliminary research before generating ideas for 4th-8th graders. To do this, we found it necessary to research what children were learning in the STEM field. Each STEM field has its subcategories. In the science field, there is life science, physical science, and space/earth science. We found these subcategories and then sorted them into a table. Then for each of these subcategories we found topics relating to them. We made sure that these topics are plausible for 4th-8th graders to learn and that they have some concept of it before viewing/interacting with the project. From these topics we were able to then create ideas for a project. These topics can be seen in Table 1. </p>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#table-1-topics-for-4th-8th-graders","title":"Table 1 Topics for 4th-8th Graders","text":"<p>From these topics we then generated several ideas that we could make an exhibit around. After generating these ideas, we then label if they were actuator, human interface, sensor and/or topic ideas. Below is the list of ideas we made in a doc. The labeling process can be seen in Table 2. We then took these labeled ideas and sorted them into a ranking system. As a Team, we select ideas that we liked (Table 3), selected the best out of that bunch (Table 4), and then made a final decision in each category (Table 5). With these final decisions, we pieced together an exhibit. </p>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#list-of-ideas","title":"List of Ideas","text":"<ol> <li>Recycling</li> <li>Show how sample size effects data</li> <li>Types of plastics (sorting game where you match the bottle to the type based on the number)</li> <li>What happens when materials go in the microwave (safety)</li> <li>Gear ratios</li> <li>Sorting game</li> <li>WiFi enabled waiting list</li> <li>Parts of flowers</li> <li>Pollinators</li> <li>Motion sensor</li> <li>Distance sensor</li> <li>Pressure sensor</li> <li>Seismograph</li> <li>Impulse</li> <li>Bell ringing arcade game</li> <li>Leverage (move the base of a seesaw and show how much easier it is t lift things with the long end)</li> <li>Water cycle (sort the stages)</li> <li>Energy generation (kid spins motor, power output measured, powers a speaker that plays something selected over the internet)</li> <li>Eddy Currents (motor drops magnet in tube, distance sensor at bottom, show fall speed with an OLED screen)</li> <li>OLED Screen showing sensor data</li> <li>Use motor to drop something</li> <li>Ice melt experiment (moisture sensor on plate, cup full of ice and water, detect spillover and announce with speaker)</li> <li>Thermometer</li> <li>Show muscle contraction and relaxation </li> <li>Pressure sensor to activate the demo</li> <li>Motorized pulley </li> <li>Model of extruder</li> <li>Motor spinning an auger</li> <li>Astronomy (How many earths can fit in the sun)</li> <li>A kid pours how many earth can fit in the sun into a model sun</li> <li>Weight the model and calculate number of earths</li> <li>Announce the number on a speaker</li> <li>Camera for color sensing through matlab</li> <li>Camera for centering</li> <li>Diodes (show how direction affects the width of the two regions)</li> <li>Kid puts model diode in model circuit forward of backwards</li> <li>Motor moves model to reflect internal motion of the diode</li> <li>Interactive Plant Cell</li> <li>Screen for images and picture</li> <li>Logic gate interactive</li> <li>Changing states via internet</li> <li>Light prism mixing</li> <li>Rotating motor based of human input</li> <li>Light sensor</li> <li>Color sensor</li> <li>Basic LED Circuit</li> <li>Voltmeter sensor</li> <li>Ampmeter sensor</li> <li>Pulley Demonstration</li> <li>Equivalent Planet Gravity</li> <li>Centrifuge type actuator</li> <li>Rotating Rock Plate</li> <li>Floating Styrofoam</li> <li>Speakers to make standing wave</li> <li>Sound sensor</li> <li>Precipitation Demonstration</li> <li>Moisture sensor</li> <li>Liquid, Solid, Gas H20 demonstration</li> <li>Interactive Survey of Questions</li> <li>Real time changing statistics</li> <li>Wind generator</li> <li>Solar generator</li> <li>Motor</li> <li>Power a wind turbine with a modular fan</li> <li>Curdle milk with lemon juice (chemical reaction)</li> <li>Rotationally accurate model solar system (Powered with motor that speeds up with touch sensor and everything moves at the correct rate with gears)</li> <li>Touch slider</li> <li>Tesla Coil</li> <li>Drive spark gap open and closed with a motor</li> <li>Centrifuge to separate liquid mixtures (i.e. milk, impure water, koolaid, etc)</li> <li>Pressure sensor on hammer to show how hard something is being hit</li> <li>Types of teeth</li> <li>Turn a telescope and display a different constellation based off of where it is pointing</li> <li>Build a tower above a certain line</li> <li>Green screen</li> <li>Heat sensor</li> <li>Thermal camera</li> <li>buoyancy (kid makes a paper boat and puts it on water, marbles are added, sensor tells when boat sinks, speaker plays a \"womp womp womp\" noise to indicate the boat sunk)</li> <li>Generate and store electric charge</li> <li>Hydroelectric generator</li> <li>Run-of- the-River generator model</li> <li>Windmill</li> <li>Light Wavelength Imaging</li> <li>Moon Mirror and Laser Experiment</li> <li>Round Earth Experiment</li> <li>Line following robot</li> <li>Relative speed experiment: kids are asked whether a projectile will move faster if launched with some velocity in initial conditions. Sensors determine results.</li> <li>Feather and bowling ball experiment</li> <li>Signature tracking projectile (But make it cute? Like a heat seeking stuffed animal?)</li> <li>Googles that use machine learning to identify objects</li> <li>Steam engine</li> <li>Robot with markers for legs that paints drawings for the kids</li> <li>Remote controlled underwater robot that takes footage we could send to parents</li> <li>3d printed or popsicle stick drone kids the kids can easily assemble during the showcase</li> <li>\u201cBuild a bristle bot\u201d make hex bugs out of toothbrushes and a battery and tiny motor to make it wiggle</li> <li>Vibration Motor</li> <li>Light tracker</li> <li>Search and rescue robot</li> <li>\u201cBuild a bot\u201d kids pick from simple materials, (paper clips etc) to build their own wiggle bot</li> <li>Moon phases tracking device</li> <li>Moon phase demo (shine light on ball and show how light curves around the model of the moon)</li> <li>Live \u201cDistance to the Moon\u201d tracker</li> </ol>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#table-2-labeled-ideas","title":"Table 2 Labeled Ideas","text":"","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#table-3-ideas-we-like-orange","title":"Table 3 Ideas We Like (Orange)","text":"","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#table-4-best-of-the-bunch-blue","title":"Table 4 Best of the Bunch (Blue)","text":"","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#table-5-final-choices-purple","title":"Table 5 Final Choices (Purple)","text":"","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#design-concept-sketch","title":"Design Concept Sketch","text":"<p>Our team has decided to demonstrate that gravity can be mimicked using a centrifuge in an interactive science exhibit geared towards fourth to eighth grade students. Even though this is not explicitly a standard topic for the grade level, exposing a student to this concept could ignite their curiosity and make them more interested in related topics in the future. The exhibit will feature a centrifuge that is driven by a motor. The speed of the motor depends on what planet the student selects. The student selects the planet by placing their hands on a mat that shows the planets. A distance sensor will measure how far away their hand is. This data will be communicated with the motor and an OLED screen through the micro controllers. The OLED screen will print out the name of the planet the student has selected. The name of the planet will be sent to the user\u2019s phone through internet communication. If the user presses a button, the OLED screen will display a fact about the current planet. The student using the machine will be given a small piece of clay that they can shape. Once it is their turn to use the machine, their clay is placed on the edge of the machine. When they select their gravity, the machine will spin, squishing their clay figure. The student will get to keep their clay figure once the demonstration is over. A concept design can be seen in Fig.1 and an exploded view in Fig.2 with labeled parts.</p>","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#fig1-centrifuge-concept","title":"Fig.1 Centrifuge Concept","text":"","tags":["tag1","tag2"]},{"location":"ideation-and-concept-generation/#fig2-exploded-view-of-centrifuge-concept","title":"Fig.2 Exploded View of Centrifuge Concept","text":"<p>Users will be provided with written instructions and illustrations to guide them through how to interact with the exhibit. These will be printed on the exhibit near the feature that they pertain to in order to ensure that the user sees the instructions and understands how to safely operate the machine. There will be a warning about the centrifuge spinning at high speeds to keep the user from behaving dangerously around the machine. Where appropriate, team members will guide the audience through the demonstration prompts. Users will be asked to \u201cchoose their planet\u201d to model their selected acceleration value. Users will identify their planet of choice in the marked location relative to their chosen planet\u2019s distance from the sun. The use of a distance sensor ensures users are a safe distance from rotating components to initiate simulation by requiring that at least one of their hands be significantly far from the centrifuge. The speed will be controlled by the distance sensor. The student will place one of their hands on a print-out that depicts a selection of planets. The user will place their hand on one of the planets. The distance sensor will read how far away the hand is and cause the motor to spin at the appropriate RPM for the selection. The HMI requirement asks us to allow users to see the sensor data and edit the setpoints for the demo. This would not be a feature that a fourth to eighth grader should have access to, as they could set certain values to dangerously high or low numbers and it is not necessary for the demonstration. This feature would only be used by demonstrators (i.e. teachers, developers, and museum employees) in case they want to change any of the values or diagnose potential issues with the device.  The demo will have the following safety features to ensure that no one gets hurt while interacting with the machine. The centrifuge will be securely mounted and any contents will be sealed in the centrifuge while it is on. This is to ensure that nothing flies out of the machine, potentially injuring people. Users will have to keep at least one hand far away from the machine in order to use the controls. If no hand is present, the machine will not spin. Students and users with long hair will be instructed that their hair must be tied up and secured to keep it from getting caught in the machine. Users will be instructed and warned to not stand too close to the centrifuge.  This exhibit can be split up into four subsystems. All of these subsystems would have some type of microcontroller and these controllers would communicate to each other via serial communication. The first subsystem would be a motor connected to an IC. The second subsystem would be the digital distance sensor that uses serial communion. Another would be a human interface for de-bugging. It will also be used for displaying information to the 4th-8th grader. Lastly, there would be a subsystem that sends information via the internet to a user and they could also send information back to the microcontroller. These subsystems would be split up among each member of STEMtresting. </p>","tags":["tag1","tag2"]},{"location":"main-page/","title":"Home","text":"","tags":["tag1","tag2"]},{"location":"main-page/#stemteresting","title":"STEMteresting","text":"","tags":["tag1","tag2"]},{"location":"main-page/#team-301","title":"Team 301","text":"","tags":["tag1","tag2"]},{"location":"main-page/#ella-greetis-sara-bohart-julia-smith-xander-heafey","title":"Ella Greetis, Sara Bohart, Julia Smith, Xander Heafey","text":"<p>1/16/25  Spring 2025  Arizona State University  EGR 314, Prof. Nichols </p> <p>Team Organization Ideation and Concept Generation Appendix</p>","tags":["tag1","tag2"]},{"location":"main-page/#individual-github-links","title":"Individual GitHub Links","text":"<p>Ella Greetis Sara Bohart Julia Smith Xander Heafey </p>","tags":["tag1","tag2"]},{"location":"second-page/","title":"Appendix A - Team Organization","text":"<p>More coming soon</p>"},{"location":"team-organization/","title":"Team Organization","text":"","tags":["tag1","tag2"]},{"location":"team-organization/#charter","title":"Charter","text":"<p>Who We Are:  STEMteresting was created to keep STEM learning  interesting for all ages through interactive  exhibits that engage audiences of all ages,  inspiring wonder and curiosity for the world  around them.</p>","tags":["tag1","tag2"]},{"location":"team-organization/#our-goals","title":"Our Goals","text":"<ul> <li>Have the product we design demonstrate a concept in STEM that can be easily be observed by people of all ages</li> <li>Make something that we are proud of</li> <li>Implement our device in 3 museum displays by the end of the year</li> <li>Learn a new scientific principle, and  demonstrate it for our audience in a clear and  entertaining fashion</li> <li>Enhance our personal engineering portfolios with a well-designed, well-executed device</li> </ul>","tags":["tag1","tag2"]},{"location":"team-organization/#mission-statement","title":"Mission Statement","text":"<p>Our Mission:  Sharing STEM education to inspire curiosity in  people of all ages.</p>","tags":["tag1","tag2"]},{"location":"team-organization/#communication-channels","title":"Communication Channels","text":"Name Preferred Contact Method Email Phone Discord Name Sara Discord sjbohart@asu.edu 4805226934 Sara (@bananabreadmfn) Xander Discord/text xheafey@asu.edu 4809380900 (@mr.shitman) Ella Discord egreetis@asu.edu 8327601995 (@hella8931) Julia Discord jasmi157@asu.edu 8458077919 (@juliasmith141)","tags":["tag1","tag2"]},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}